trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  resourceGroup: 'rg-devops-cli'
  location: 'East US'
  appServicePlan: 'ASP-DevopsRG-87c7'
  webAppNameDev: 'webapp-cli-demo-dev'
  webAppNameProd: 'webapp-cli-demo-prod'
  runtime: 'NODE|18-lts'

stages:
# -------------------- Build Stage --------------------
- stage: Build
  displayName: 'Build and Test'
  jobs:
    - job: BuildJob
      displayName: 'Install, Lint, Test & Package'
      steps:

        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: 'Use Node.js 18'

        - script: |
            npm install
          displayName: 'üì¶ Install Dependencies'

        - script: |
            npx eslint . || echo "‚ö†Ô∏è Linting warnings (not failing build)"
          displayName: 'üßπ Run ESLint'

        - script: |
            npm test
          displayName: 'üß™ Run Unit Tests with Jest'

        - task: ArchiveFiles@2
          displayName: 'üì¶ Zip for Deployment'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
            replaceExistingArchive: true

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifact: 'drop'
            publishLocation: 'pipeline'

# -------------------- Dev Deployment --------------------
- stage: DeployDev
  displayName: 'Deploy to Development'
  dependsOn: Build
  jobs:
    - deployment: DeployToDev
      displayName: 'Deploy Web App to Dev'
      environment: 'dev'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifactName: 'drop'
                  targetPath: '$(Pipeline.Workspace)'

              - task: AzureWebApp@1
                displayName: 'üöÄ Deploy to Dev Web App'
                inputs:
                  azureSubscription: 'Con1'
                  appType: 'webAppLinux'
                  appName: '$(webAppNameDev)'
                  package: '$(Pipeline.Workspace)/app.zip'

# -------------------- Production Deployment --------------------
- stage: DeployProd
  displayName: 'Deploy to Production'
  dependsOn: DeployDev
  condition: succeeded()
  approval:
    approvals:
      - reviewers:
          - name: '<YOUR-APPROVER-EMAIL-OR-ID>'
            type: User
  jobs:
    - deployment: DeployToProd
      displayName: 'Deploy Web App to Prod'
      environment: 'prod'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifactName: 'drop'
                  targetPath: '$(Pipeline.Workspace)'

              - task: AzureWebApp@1
                displayName: 'üöÄ Deploy to Prod Web App'
                inputs:
                  azureSubscription: 'Con1'
                  appType: 'webAppLinux'
                  appName: '$(webAppNameProd)'
                  package: '$(Pipeline.Workspace)/app.zip'
