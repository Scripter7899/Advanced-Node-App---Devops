trigger:
  branches:
    include:
      - main

variables:
  resourceGroup: 'rg-devops-cli'
  location: 'East US'
  appServicePlan: 'ASP-DevopsRG-87c7'
  webAppName: 'webapp-cli-demo-$(Build.BuildId)'
  runtime: 'NODE:18-lts'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build & Test'
  jobs:
    - job: BuildJob
      displayName: 'Install, Lint, Test & Publish'
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: 'Use Node.js 18.x'

        - script: |
            cd src
            npm install
          displayName: 'ðŸ“¦ Install Dependencies'

        - script: |
            cd src
            npm run lint
          displayName: 'ðŸ§¹ Run ESLint'

        - script: |
            cd src
            npm test
          displayName: 'ðŸ§ª Run Unit Tests'

        - task: ArchiveFiles@2
          displayName: 'ðŸ“¦ Zip Code'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Pipeline.Workspace)/drop/app.zip'
            replaceExistingArchive: true

        - publish: '$(Pipeline.Workspace)/drop'
          artifact: drop

- stage: Deploy_Dev
  displayName: 'Deploy to Dev'
  dependsOn: Build
  jobs:
    - job: DeployDev
      displayName: 'Deploy to Dev'
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: drop
            targetPath: '$(Pipeline.Workspace)/drop'

        - task: AzureCLI@2
          inputs:
            azureSubscription: 'Con1'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              echo "Creating Web App: $(webAppName)"
              az webapp create \
                --resource-group $(resourceGroup) \
                --plan $(appServicePlan) \
                --name $(webAppName) \
                --runtime "$(runtime)"

        - task: AzureWebApp@1
          displayName: 'ðŸš€ Deploy to Dev'
          inputs:
            azureSubscription: 'Con1'
            appType: 'webAppLinux'
            appName: '$(webAppName)'
            package: '$(Pipeline.Workspace)/drop/app.zip'

- stage: Deploy_Prod
  displayName: 'Deploy to Production'
  dependsOn: Deploy_Dev
  jobs:
    - job: ManualApproval
      displayName: 'âœ… Await Manual Approval'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: ManualValidation@0
          inputs:
            notifyUsers: 'tanishqbansal2645@gmail.com'
            instructions: 'Please approve production deployment.'
            onTimeout: 'reject'
            timeout: '1h'

    - job: DeployProd
      displayName: 'ðŸš€ Deploy to Production'
      dependsOn: ManualApproval
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: drop
            targetPath: '$(Pipeline.Workspace)/drop'

        - task: AzureWebApp@1
          displayName: 'ðŸš€ Deploy to Production Web App'
          inputs:
            azureSubscription: 'Con1'
            appType: 'webAppLinux'
            appName: '$(webAppName)'
            package: '$(Pipeline.Workspace)/drop/app.zip'
