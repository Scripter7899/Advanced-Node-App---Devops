trigger:
  branches:
    include:
      - main

variables:
  resourceGroup: 'rg-devops-cli'
  location: 'East US'
  appServicePlan: 'ASP-DevopsRG-87c7'
  webAppName: 'webapp-cli-demo-$(Build.BuildId)'
  runtime: 'NODE|18-lts'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildAndTest
    displayName: 'Install, Lint, Test, and Package'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'Install Dependencies'

    - script: |
        npm run lint
      displayName: 'Run Linting'

    - script: |
        npm test
      displayName: 'Run Unit Tests'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Package Application'

    - publish: $(Build.ArtifactStagingDirectory)/app.zip
      artifact: drop
      displayName: 'Publish Artifact'

- stage: DeployToStaging
  displayName: 'Deploy to Staging'
  dependsOn: Build
  jobs:
  - deployment: StagingDeployment
    environment: 'Staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'YourAzureServiceConnection'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/app.zip'
            displayName: 'Deploy to Staging'

- stage: DeployToProduction
  displayName: 'Deploy to Production'
  dependsOn: DeployToStaging
  jobs:
  - deployment: ProductionDeployment
    environment: 'Production'
    strategy:
      runOnce:
        preDeploy:
          steps:
          - task: ManualValidation@0
            inputs:
              notifyUsers: |
                your-email@example.com
              instructions: 'Please approve the deployment to production.'
              onTimeout: 'reject'
            displayName: 'Approval for Production Deployment'
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'YourAzureServiceConnection'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/app.zip'
            displayName: 'Deploy to Production'
